services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: 24urenloop
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d 24urenloop"]
      interval: 5s
      timeout: 3s
      retries: 20

  # Run Prisma migrations automatically (non-interactive) on startup
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      DATABASE_URL: postgres://app:app@db:5432/24urenloop
      NEXT_TELEMETRY_DISABLED: "1"
    restart: "no"
    command: [
      "sh","-lc",
      "if [ ! -d node_modules ] || [ -z \"$(ls -A node_modules 2>/dev/null)\" ]; then npm ci; fi; npx prisma migrate deploy"
    ]

  # Seed runs after migrations; only first time thanks to seed-flag volume
  seed:
    image: python:3.12-slim
    working_dir: /app
    depends_on:
      migrate:
        condition: service_completed_successfully
    volumes:
      - .:/app
      - seed-flag:/flags
    environment:
      DATABASE_URL: postgres://app:app@db:5432/24urenloop
    restart: "no"
    command: [
      "sh","-c",
      "if [ ! -f /flags/seeded ]; then echo 'Seeding DB first run...'; pip install --no-cache-dir psycopg2-binary python-dotenv && python3 initialize_db.py && touch /flags/seeded && echo 'Seeding complete.'; else echo 'DB already seeded - skipping.'; fi"
    ]

  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /app
    depends_on:
      migrate:
        condition: service_completed_successfully
    # Mount source for hot reload; keep node_modules inside container
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      DATABASE_URL: postgres://app:app@db:5432/24urenloop
      NEXT_TELEMETRY_DISABLED: "1"
    ports:
      - "3000:3000"
    command: >
      sh -lc "
        if [ ! -d node_modules ] || [ -z \"$(ls -A node_modules 2>/dev/null)\" ]; then
          echo 'Installing node_modules in app container...';
          npm ci;
        fi;
        npx next dev -H 0.0.0.0 -p 3000
      "

  # Prisma Studio on localhost:5555 (no --host/--port flags; publish port instead)
  studio:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /app
    depends_on:
      migrate:
        condition: service_completed_successfully
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      DATABASE_URL: postgres://app:app@db:5432/24urenloop
    ports:
      - "5555:5555"
    restart: unless-stopped
    command: >
      sh -lc "
        if [ ! -d node_modules ] || [ -z \"$(ls -A node_modules 2>/dev/null)\" ]; then
          echo 'Installing node_modules in studio container...';
          npm ci;
        fi;
        npx prisma studio
      "

volumes:
  db-data:
  seed-flag: